
import java.io.*;
import java.util.*;

public class main {

	private static Scanner Scanner;
	private static Scanner s;
	static int cnt=0;
	static int swaps=0;
	
	public static void main(String[] args) throws IOException {
		
		try {
		Scanner Scanner = new Scanner(System.in);
		System.out.print("Give the filename with the .txt suffix :");
		String filename = Scanner.nextLine();
		
		Scanner s = new Scanner(new File(filename));
		ArrayList<Integer> list = new ArrayList<Integer>();
		while (s.hasNext()){
		    list.add(s.nextInt());
		}
		s.close();
		
		for (int i = 0; i < list.size(); i++) {
			System.out.println(list.get(i));
			}
		
		list=mergeSort(list);
		System.out.println("New sorted //");
		
		for (int i = 0; i < list.size(); i++) {
			System.out.println(list.get(i));
			}
		
		System.out.println("swaps:" +swaps);
		System.out.println("counter:" +cnt);
		}
		
		catch (FileNotFoundException e) {
			System.out.println("Directory not found");
			System.out.println("//");
	        e.printStackTrace();
	        }
			
		
	}
      public static ArrayList<Integer> mergeSort( ArrayList<Integer> values)
        {
            if (values.size() ==1){
                return values;
            }
            else {
            	 //int mid=values.size()/2;
                int mid= (int) Math.ceil(values.size()/2.0);
                System.out.println("mid ="+mid);
                ArrayList<Integer> left= new ArrayList<Integer>(mid);
                
                ArrayList<Integer> right=new ArrayList<Integer>(values.size()-mid);
                

               for (int i = 0; i < mid; i++) {
                   left.add(values.get(i));
                   } 

               for (int i = mid; i < values.size(); i++) {
                   right.add(values.get(i));
               } 

               left=mergeSort(left); 
               right=mergeSort(right);
               merge(left,right,values);
            }
               return values;
        }


        public static void merge (ArrayList<Integer>left,ArrayList<Integer>right,ArrayList<Integer>values)
        {
            int i1=0;// left Index
            int i2=0;// right Index
            int InputIndex=0;



            for (int i = 0; i < values.size(); i++) {

                if(i1==left.size()){
                    values.set(i, right.get(i2));
                    i2++;
                }
                else{
                    if (i2==right.size()){
                        values.set(i,left.get(i1));
                        i1++;
                    }
                    else{
                        if (left.get(i1)<=right.get(i2)) {
                            values.set(i,left.get(i1));
                            i1++;
                            //swaps++;
                        }
                        
                        	else {
                            if (left.get(i1)>=right.get(i2)) {
                            values.set(i, right.get(i2));
                            System.out.println("2left="+left.get(i1));
                            System.out.println("2right="+right.get(i2));
                            System.out.println("---------");
                            cnt=cnt+3;
                            i2++;
                            swaps++;
                            }
                        	
                        else {
                        	if (left.get(i1)==((right.get(i2))+1)) {
                                values.set(i, right.get(i2));
                                System.out.println("1left="+left.get(i1));
                                System.out.println("1right="+right.get(i2));
                                System.out.println("---------");
                                cnt=cnt+2;
                                i2++;
                                swaps++;
                                }
                        }
                    }
                }

            }
        }
}}
